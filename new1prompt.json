[
  {
    "title": "onepromptSite Home Page",
    "url": "https://onepromptsites.com",
    "previewImage": "https://api.microlink.io/?url=https://onepromptsites.com&screenshot=true&embed=screenshot.url",
    "prompt": "Create a homepage for a project called\n  \"OnePromptSite\" — a visually striking, modern directory that\n  showcases websites created from a single AI prompt.\n    \n    The purpose of this site is to demonstrate what is possible using AI to\n  build entire sites from one prompt alone. It should feel cutting-edge, a\n  little magical, and inspiring for creative technologists or curious\n  onlookers. Let your design system shine — bold layout, clean UI, and playful\n  touches are welcome.\n    \n    Use the following JSON as the data source:\n    - - REDACTED - - \n    \n    Each entry includes:\n    \n    * title\n    * url\n    * previewImage (optional)\n    * creator\n    * prompt\n    * createdAt (ISO date)\n    * notes (optional)\n    \n    For each site card:\n    \n    * Show a screenshot preview using the `previewImage` URL if present.\n    * If missing, show a styled fallback visual block:\n    \n    * Include a clean, softly colored background\n    * Bold title centered\n    * Label like “Preview Not Available” or a clean SVG icon\n    \n    Display the following details:\n    \n    * Title (clickable, opens in new tab)\n    * Creator name\n    * Date created (formatted like \"May 12, 2025\")\n    * A dropdown or toggle section labeled \"View Prompt\" that expands\n  to reveal the full prompt\n    \n    * Prompt should be displayed using <pre> or similar block that\n  preserves all special characters, line breaks, and dashes\n    * Include a “Copy Prompt” button inside the expanded section\n    * Only show `notes` if present\n    \n    Design instructions:\n    \n    * Typography should be beautiful, readable, and modern\n    * Responsive grid that feels good on both mobile and desktop\n    * Let spacing, color, and hierarchy create flow\n    * Don’t over-constrain layout — use modern patterns and nice touches like\n  hover effects or animated expands\n    \n    At the top of the page:\n    \n    * Site title: \"OnePromptSite\"\n    * Tagline: \"Exploring what’s possible with a single\n  prompt.\"\n    \n    Footer:\n    \n    * Centered message: “Built with AI · One prompt at a time”\n    \n    Include:\n    \n    * Favicon\n    * SEO metadata (title: OnePromptSite, description: A growing archive of\n  websites built with one prompt alone.)\n    \n    Avoid including any contact forms or editing tools. This is a public-facing\n  gallery powered entirely by the JSON feed.",
    "createdAt": "2025-05-12",
    "notes": "Showcase of prompt generating the home page",
    "tool": "Lovable.dev",
    "whatWorked": "Simple and straightforward, I’ve been refining my\n  personal GPT to learn what works best.",
    "whatDidntWork": "1 code fix automatically cycled. I found that\n  trying to force a specific theme through detailed wording often restricted\n  the AI too much. Instead, I started attaching a reference image of the style\n  I wanted—and that shift made a huge difference in how well the results\n  matched my vision.",
    "nextSteps": "Use this as the base for fivepromptsites.com. Might\n  take this off oneprompt to make it easier to manage in the future."
  },
  {
    "title": "onepromptSite Home Page",
    "url": "https://onepromptgymbro.com",
    "previewImage": "https://api.microlink.io/?url=https://onepromptgymbro.com&screenshot=true&embed=screenshot.url",
    "prompt": "Create a fully functional, mobile-first single-gym website\n  named \"onepromptGymBro\" that includes:\n    \n    - A public-facing user view\n    - A gym owner/admin dashboard\n    - Toggle-based layout switching with proper state management\n    \n    Design should reflect brands like F45 or CrossFit — clean, bold, minimal,\n  and optimized for mobile.\n    \n    ---\n    \n    Header & Toggle Controls (Responsive & Functional)\n    \n    - Fixed top nav bar with onepromptGymBro logo\n    - View toggle with 2 options:\n      - “User View”\n      - “Admin View”\n    - On mobile:\n      - Use a dropdown or tab switcher\n  for compact toggle\n      - Ensure tap targets are\n  touch-friendly\n    - Clicking a toggle:\n      - Updates a `viewMode` value in\n  localStorage (e.g., `user`, `admin`)\n      - Re-renders the page content based\n  on the selected mode\n    - On page load:\n      - Check localStorage for last used\n  `viewMode`\n      - Default to \"User View\"\n  if none found\n    - Each view must conditionally render its section — only one active view at\n  a time\n    \n    ---\n    \n    User View (Public Site)\n    \n    - Hero section with gym branding and CTA\n    - Enquiry form (name, email, phone, message)\n      - Stores to localStorage and shows\n  confirmation\n    - Daily Workout (pulls latest \"Published\" workout)\n    - Class Schedule (pre-filled or synced from Admin)\n    - Mobile-friendly footer\n    \n    ---\n    \n    Admin View (Gym Owner Dashboard)\n    \n    - Leads Panel\n      - Table of enquiries with notes +\n  follow-up email\n      - “Convert to Member” opens modal\n  with sign-up\n    - Members Panel\n      - List of members with editable\n  info\n      - Send Welcome/Exit emails\n    - Workout Manager\n      - Add/edit/delete workouts, mark\n  one as “Published”\n    - Class Scheduler\n      - Weekly grid of gym classes with\n  fields\n    \n    ---\n    \n    Data Handling\n    \n    - All data in localStorage: enquiries, members, workouts, schedules\n    - View toggle must persist and reflect changes live\n    \n    ---\n    \n    Styling\n    \n    - Responsive layout, sticky headers, collapsible panels on mobile\n    - Tabs, cards, and modals for clean UX\n    \n    ---\n    \n    User Stories\n    \n    1. As a visitor, I want to submit a contact form.\n    2. As a visitor, I want to view the daily workout.\n    3. As a visitor, I want to browse the class schedule.\n    4–11. As a gym owner, I want to manage leads, members, workouts, and\n  schedules with proper feedback and flow.\n    \n    ---\n    \n    Build Guidelines\n    \n    - No backend, only localStorage\n    - View toggle must:\n      - Set `viewMode` in\n  localStorage\n      - Load correct view on\n  refresh\n      - Ensure only active view content\n  is rendered",
    "createdAt": "2025-05-15",
    "notes": "Starting to get an idea of what you can do.",
    "tool": "Bolt.new",
    "whatWorked": "This is my first site on bolt. Not sure I love it but will\n  continue testing",
    "whatDidntWork": "You can't force to much through AI. I really wanted a member\n  login section as well member engagement functions but the prompt just got too\n  sophisticated and AI couldn't keep up.",
    "nextSteps": "Member Portal + Health Tracking + Booking + Billing"
  },
  {
    "title": "onepromptEXCELtoJSON Home page",
    "url": "https://onepromptexceltojson.com",
    "previewImage": "https://api.microlink.io/?url=https://onepromptexceltojson.com&screenshot=true&embed=screenshot.url",
    "prompt": "Invite\n    \n    Publish  \n    Create a mobile-first web app that lets users paste Excel or Google Sheets\n  data — including complex, multiline cells — directly into an interactive HTML\n  table. This table should be editable, convertible to JSON, and support clean\n  output formatting.\n    \n    ---\n    \n    CORE GOAL  \n    Enable a seamless paste-from-Excel experience that accurately renders\n  pasted tables (including line breaks within cells) and allows real-time\n  editing, conversion, and download as JSON.\n    \n    ---\n    \n    PASTE & TABLE INPUT  \n    - Use a large, styled `<div contenteditable=\"true\">` as the\n  main paste zone.\n    - On paste:\n      - Intercept clipboard HTML using\n  `e.clipboardData.getData(\"text/html\")`\n      - Extract the `<table>`\n  element from the pasted content\n      - If no table is found, display a\n  gentle error message\n    - Render the extracted table visually, maintaining:\n      - Row/column structure\n      - Line breaks, paragraph spacing\n  inside cells\n      - Merged cells as separate values\n  (optional: flatten colspan/rowspan)\n      - Multiple rows of header data, if\n  present\n    \n    ---\n    \n    TABLE RENDERING  \n    - Display the table inside a styled, scrollable card with `rounded-2xl`, `shadow`,\n  and `p-4`\n    - Each cell should be editable using `contenteditable`\n    - Maintain a JSON object behind the scenes that stays in sync with\n  edits\n    \n    ---\n    \n    CONVERSION & OUTPUT  \n    - Provide the following output tools:\n      - “Convert to JSON” button →\n  creates structured array with headers as keys\n      - “Copy JSON” button → copies final\n  output\n      - “Download JSON” button →\n  downloads file\n      - Optional: \"Copy as CSV\"\n  or \"Download as .csv\"\n    - Preserve special characters, embedded line breaks, and whitespace in\n  output\n    - Output JSON should be pretty-printed, with a toggle for minified\n  output\n    \n    ---\n    \n    POWER FEATURES  \n    - “Clear Table” button → resets the entire paste/render area\n    - Find & Replace functionality:\n      - Search within entire table or\n  specific column\n      - Replace globally or per-match\n    - Toggle for schema preview (key:type)\n    - Toggle between raw JSON view and table view\n    - Optional: Detect headers if missing and prompt user to define them\n    \n    ---\n    \n    VISUAL DESIGN  \n    - Tailwind-style UI:\n      - Paste area: `border-dashed`,\n  `p-4`, `text-gray-600`\n      - Table: clean white background,\n  subtle border, zebra striping\n      - Cells: `hover:bg-gray-100`,\n  editable cursor\n    - Responsive: works on mobile and desktop\n    - Smooth transitions when data is pasted, cleared, or toggled\n    - Footer: “Built with love · One prompt at a time” (centered, sticky on\n  mobile)\n    \n    ---\n    \n    ADVANCED OPTIONS (optional toggle drawer) \n  \n    - Merge rows with shared keys\n    - Validate field types\n    - Export multiple tables (if detected) as separate JSON objects\n    - Detect and split multiple tables if pasted in one go\n    \n    ---\n    \n    SEO & BACKEND  \n    - Include blank `sitemap.xml` in `public/`\n    - Title: “Paste Excel to Table to JSON”\n    - Description: “Paste Excel tables into editable HTML and export to clean\n  JSON instantly.”\n    - Meta viewport + favicon\n    \n    ---\n    \n    This project should feel magical: paste → render → edit → export. No\n  uploads. No config. Just flow.",
    "createdAt": "2025-05-16",
    "notes": "Site built to make my live earier. Are other converters but\n  wanted easy copy and paste from excel tables.",
    "tool": "Lovable.dev",
    "whatWorked": "Great simple clean site. Something I'll be using for my\n  projects going forward.",
    "whatDidntWork": "Lovable didn't build in a new favicon so stuck with the default… Site should\n  have been named onepromptEXCELtoJSON. Code was manually edited. Google AdSense slot request was\n  ignored by AI, will need to add it manually later if this concept works.",
    "nextSteps": "Wants support for multiple tables in one JSON to simulate multi-table\n  database structure. If successful, plans to remix into fivepromptSites concept."
  }
]
